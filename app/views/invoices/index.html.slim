h1 Invoices
- if current_user.invoices.empty?
  .alert.alert-info
    = link_to "x", "#", class: "close", data: {dismiss: "alert"}
    span.intro With invoices you can:
    ul
      li Create invoices based on your worklogs.
      li Create arbitrary invoices based on other work you did.
      li Send a client invoices as a .pdf
      li Create a standardized template.

table.table.table-bordered
  thead
    tr
      th.hidden-phone Number
      th Client
      th Total
      th.hidden-phone Created on
      th.hidden-phone Paid on
      th Controls

  tbody
  - @invoices.each do |invoice|
    tr class="#{success_or_warning invoice.paid_on}"
      td.hidden-phone= invoice.number
      td= link_to invoice.client.name, edit_client_path(invoice.client)
      td= with_currency invoice.total
      td.hidden-phone= l invoice.created_at, format: :day_month_year
      td.hidden-phone= invoice.paid_on ? l(invoice.paid_on, format: :day_month_year) : "Unpaid #{invoice.days_not_paid.to_i} day(s)"
      td
        .btn-group
          = render "set_paid", invoice: invoice
          = link_to '<i class="icon-zoom-in"></i> Details'.html_safe, invoice, class: "btn"
          = link_to "<i class='icon-cloud-download'></i> Download PDF".html_safe,
            pdf_export_invoice_path(invoice), class: "btn"
          = link_to 'Edit', edit_invoice_path(invoice), class: "btn"
          = link_to 'Delete', invoice, confirm: 'Are you sure? This can not be undone.', method: :delete, class: "btn"
  tfoot.hidden-phone
    tr
      td Sums:
      td
      td= with_currency current_user.total_all_invoices
      td
      td
.btn-group
  = link_to "New invoice", new_user_invoice_path(current_user), class: "btn btn-primary"
  = link_to "<i class='icon-edit'></i> Template".html_safe,
    edit_invoice_default_path(current_user.invoice_default), class: "btn"
